openapi: 3.1.0
x-stoplight:
  id: yvmuw34jwk7sl
info:
  title: alpha2
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /authenticate:
    post:
      summary: Authenticate
      operationId: authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      description: Authenticates the login information and returns a token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
  /users:
    get:
      summary: List Users
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      operationId: list-users
      x-internal: false
      description: Lists all `Users`.
    post:
      summary: Create User
      operationId: create-user
      responses:
        '200':
          description: OK
      description: Create a new `User`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  format: email
  '/users/{user_id}':
    parameters:
      - $ref: '#/components/parameters/user_id'
    get:
      summary: Delete User
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-user
      description: Get `User` details.
    put:
      summary: Update User
      operationId: update-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: Update `User` details. Allows partial updates.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
    delete:
      summary: Delete User
      operationId: delete-user
      responses:
        '200':
          description: OK
      description: Deletes a `User`.
  /service/init:
    post:
      summary: Initialize installation
      operationId: initialize
      responses:
        '200':
          description: OK
      description: 'Deletes any database data, creates a new instance and populates with default data.'
components:
  schemas:
    User:
      title: User
      x-stoplight:
        id: d27kok21ywqdd
      type: object
      properties:
        id:
          type: string
        username:
          type: string
          format: email
  parameters:
    user_id:
      name: user_id
      in: path
      required: true
      schema:
        type: string
      description: UUID representing the user.
