openapi: 3.1.0
x-stoplight:
  id: yvmuw34jwk7sl
info:
  title: alpha3
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /authenticate:
    post:
      summary: Authenticate
      operationId: authenticate
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
      description: Authenticates the login information and returns a token.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                identity:
                  type: string
                  description: Can be either email or username.
                  example: Username og email.
                password:
                  type: string
    parameters: []
  /users:
    get:
      summary: List Users
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
      operationId: list-users
      x-internal: false
      description: Lists all `Users`.
      parameters:
        - $ref: '#/components/parameters/api-key'
    post:
      summary: Create User
      operationId: create-user
      responses:
        '200':
          description: OK
      description: Create a new `User`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                username:
                  type: string
                password:
                  type: string
        description: ''
  '/users/{username}':
    parameters:
      - $ref: '#/components/parameters/username'
    get:
      summary: Get User
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      operationId: get-user
      description: Get `User` details.
    put:
      summary: Update User
      operationId: update-user
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      description: Update `User` details. Allows partial updates.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
    delete:
      summary: Delete User
      operationId: delete-user
      responses:
        '200':
          description: OK
      description: Deletes a `User`.
  /service/init:
    post:
      summary: Initialize installation
      operationId: initialize
      responses:
        '200':
          description: OK
      description: 'Deletes any database data, creates a new instance and populates with default data.'
  '/users/{username}/mutations':
    get:
      summary: List Mutations
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mutation'
      operationId: list-mutations
      description: Lists all of this `Users` `Mutations`.
    parameters:
      - $ref: '#/components/parameters/username'
    post:
      summary: Create Mutation
      operationId: create-mutation
      responses:
        '200':
          description: OK
      description: Creates a new `Mutation` for the `User`.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                visibility:
                  type: string
                  enum:
                    - PUBLIC
                    - PRIVATE
                  default: PUBLIC
                github_url:
                  type: string
  '/users/{username}/mutations/{mutation}':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/mutation'
    get:
      summary: Get Mutation
      tags: []
      responses: {}
      operationId: get-mutation
      description: Get `Mutation` details.
    put:
      summary: Update Mutation
      operationId: update-mutation
      responses:
        '200':
          description: OK
      description: Updates `Mutation` details.
    delete:
      summary: Delete Mutation
      operationId: delete-mutation
      responses:
        '200':
          description: OK
      description: Deletes a `Mutation`.
  '/users/{username}/routes':
    parameters:
      - $ref: '#/components/parameters/username'
    get:
      summary: List Routes
      tags: []
      responses: {}
      operationId: list-routes
    post:
      summary: Create Route
      operationId: create-route
      responses:
        '200':
          description: OK
  '/users/{username}/routes/{route}':
    parameters:
      - $ref: '#/components/parameters/username'
      - $ref: '#/components/parameters/route'
    get:
      summary: Get Route
      tags: []
      responses: {}
      operationId: get-route
    put:
      summary: Update Route
      operationId: update-route
      responses:
        '200':
          description: OK
    delete:
      summary: Delete Route
      operationId: delete-route
      responses:
        '200':
          description: OK
components:
  schemas:
    User:
      title: User
      x-stoplight:
        id: d27kok21ywqdd
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        username:
          type: string
        api-key:
          type: string
          format: uuid
        mutations:
          type: array
          items:
            $ref: '#/components/schemas/Mutation'
    Mutation:
      title: Mutation
      x-stoplight:
        id: xr9wmdzso5glo
      type: object
      examples: []
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        visibility:
          type: string
          enum:
            - PUBLIC
            - PRIVATE
          default: PUBLIC
        github_url:
          type: string
          description: Link to public github repository.
  parameters:
    username:
      name: username
      in: path
      required: true
      schema:
        type: string
        minLength: 4
        maxLength: 64
    mutation:
      name: mutation
      in: path
      required: true
      schema:
        type: string
        minLength: 4
        maxLength: 64
    route:
      name: route
      in: path
      required: true
      schema:
        type: string
        minLength: 4
        maxLength: 64
    api-key:
      name: api-key
      in: query
      schema:
        type: string
        format: uuid
  securitySchemes:
    access_token:
      type: http
      scheme: bearer
      description: ''
